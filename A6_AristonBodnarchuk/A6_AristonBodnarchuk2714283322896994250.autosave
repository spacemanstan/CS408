/*
  Name:  Ariston Bodnarchuk
 Id:    200285478
 Prof:  Alain Maubert Crotte
 Class: CS 408-001: Animation Software Design
 
 Assignment 5: Gas Simulation Program
 ############################################################
 
 Descrition:
 
 i hate my life
 
 i should do a recursive function, if height is too big compared to adjacent heights, subtract some height and add it to neighbor, call check on neighbor, after return see if still invalid and repeat, same with neighbor
 
 */

final int FPS = 30;
final int DIM = (1 << 8) ; // wanted a 2 power, this is 2 ^ 8 or 256
final int LENGTH = DIM * DIM;

float unit;

PVector[] points = new PVector[LENGTH]; 

void setup() {
  size(1280, 720, P3D);
  colorMode(HSB, 360, 100, 100, 100);
  frameRate(FPS);
  surface.setTitle("A6: Falling Sand"); // name the window better

  unit = (float)width / (float)DIM;

  for (int x_ = 0; x_ < DIM; ++x_) {
    for (int z_ = 0; z_ < DIM; ++z_) {
      points[ getIndex(x_, z_) ] = new PVector(unit/2 + x_*unit, 0, unit/2 + z_*unit);
    }
  }
}

void draw() {
  lights();
  background(69); // nice
  
  //translate(0, height/3, -width);
  //rotate( map(mouseX, 0, width, -TWO_PI, TWO_PI) );
  
  noStroke();
  fill(46, 38, 97);
  
  for(PVector point : points) {
    pushMatrix();
    translate(point.x, point.y, point.z);
    sphere(unit);
    popMatrix();
  }
}

int getIndex(int xVal, int zVal) {
  // prevent out of bounds 
  int xPos = constrain(xVal, 0, DIM);
  int zPos = constrain(zVal, 0, DIM);
  
  return xPos + (zPos * DIM);
}
